{
  "swagger": "2.0",
  "info": {
    "description": "Aplicação API Rest para gerenciamento de dados da Clínica Pomarola",
    "title": "API PomaLabs",
    "contact": {
      "email": "fdutra.c@gmail.com"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "schemes": [
    "http"
  ],
  "paths": {
    "/User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Adiciona um novo usuário",
        "description": "Cadastre um novo usuário para lhe liberar permissões de cadastros, consultas e alterações",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "Dados do usuário a ser cadastrado",
            "schema": {
              "type": "object",
              "required": ["name", "login", "password"],
              "properties": {
                "name": {
                  "type": "string",
                  "maximum": "255"
                },
                "login": {
                  "type": "string",
                  "minimum": "6",
                  "maximum": "20",
                  "unique":"true"
                },
                "password": {
                  "type": "string",
                  "minimum": "6"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Lista todos os usuários cadastrados",
        "operationId": "listUser",
        "description": "Faz uma lista que contém todos os usuários que já foram cadastrados no sistema",
        "consumes":[
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "Dados dos usuários a serem exibidos",
            "schema": {
              "type": "object",
              "required": ["name", "login"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "login": {
                  "type": "string",
                  "minimum": "6",
                  "maximum": "20"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/User/{id}": {
      "put": {
        "name": "user",
        "tags": [
          "User"
        ],
        "summary": "Atualiza os dados do usuário",
        "description": "Atualiza os dados de um usuário específico selecionado pelo ID",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do usuário a ser alterado",
            "required": true
          },
          {
            "in": "body",
            "name": "user",
            "description": "Dados do usuário a ser alterado",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "login": {
                  "type": "string",
                  "minimum": "6",
                  "maximum": "20"
                },
                "password": {
                  "type": "string",
                  "minimum": "6"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID Invalido!"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "405": {
            "description": "Erro no servidor"
          }
        }
      },
      "get": {
        "name": "user",
        "tags": [
          "User"
        ],
        "summary": "Retorna os dados de um usuário cadastrado",
        "description": "Retorna os dados de um cliente específico selecionado pelo ID",
        "operationId": "showUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do usuário a ser exibido",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "name": "user",
        "tags": [
          "User"
        ],
        "summary": "Delete do sistema um usuário",
        "description": "Deleta um usuário do sistema que foi selecionado pelo ID",
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "description": "Id do usuário a ser deletado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/Client": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Adiciona um novo cliente",
        "description": "Cadastre um novo cliente para que possa ser possível fazer agendamentos.",
        "operationId": "addClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "Dados do cliente a ser cadastrado",
            "schema": {
              "type": "object",
              "required": ["name", "cpf", "phone", "mail"],
              "properties": {
                "name": {
                  "type": "string",
                  "maximum": "255"
                },
                "cpf": {
                  "type": "string",
                  "minimum": "11",
                  "maximum": "14",
                  "unique": "true"
                },
                "phone": {
                  "type": "string",
                  "maximum": "14"
                },
                "cellphone":{
                  "type": "string",
                  "maximum": "14"
                },
                "mail":{
                  "type": "string",
                  "maximum": "255",
                  "unique": "true"
                },
                "bloodtype":{
                  "type": "string",
                  "enum":["A+","A-", "B+", "B-", "O+", "O-", "AB+", "AB-"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      },
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Lista todos os clientes cadastrados",
        "description": "Faz uma lista que contém todos os clientes que já foram cadastrados no sistema",
        "operationId": "listClient",
        "consumes":[
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "Dados dos clientes a serem listados",
            "schema": {
              "type": "object",
              "required": ["name", "cpf", "phone", "mail"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "cpf": {
                  "type": "string",
                  "minimum": "11",
                  "maximum": "14"
                },
                "phone": {
                  "type": "string",
                  "maximum": "14"
                },
                "cellphone":{
                  "type": "string",
                  "maximum": "14"
                },
                "mail":{
                  "type": "string"
                },
                "bloodtype":{
                  "type": "string",
                  "enum":["A+","A-", "B+", "B-", "O+", "O-", "AB+", "AB-"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/Client/{id}": {
      "put": {
        "name": "client",
        "tags": [
          "Client"
        ],
        "summary": "Atualiza os dados do cliente",
        "description": "Atualiza os dados de um cliente específico selecionado pelo ID",
        "operationId": "updateClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do cliente a ser alterado",
            "required": true
          },
          {
            "in": "body",
            "name": "client",
            "description": "Dados do cliente a ser alterado",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "cpf": {
                  "type": "string",
                  "maximum": "14",
                  "minimum": "11"
                },
                "phone": {
                  "type": "string",
                  "maximum": "14"
                },
                "cellphone": {
                  "type": "string",
                  "maximum": "14"
                },
                "mail": {
                  "type": "string"
                },
                "bloodtype": {
                  "type": "string",
                  "enum": ["A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-"]
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID Invalido!"
          },
          "404": {
            "description": "Cliente não encontrado"
          },
          "405": {
            "description": "Erro no servidor"
          }
        }
      },
      "get": {
        "name": "client",
        "tags": [
          "Client"
        ],
        "summary": "Retorna os dados de um cliente cadastrado",
        "description": "Retorna os dados de um cliente específico selecionado pelo ID",
        "operationId": "showClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "path",
            "description": "Id do cliente a ser exibido",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "name": "client",
        "tags": [
          "Client"
        ],
        "summary": "Deleta do sistema um cliente",
        "description": "Deleta um cliente do sistema que foi selecionado pelo ID",
        "operationId": "deleteClient",
        "parameters": [
          {
            "in": "path",
            "description": "Id do cliente a ser deletado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/Specialist": {
      "post": {
        "tags": [
          "Specialist"
        ],
        "summary": "Adiciona um novo especialista",
        "description": "Cadastre um novo especialista para que possa ser possível marcar consultas e exames relacionados ao mesmo",
        "operationId": "addSpecialist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "specialist",
            "description": "Dados do especialista a ser cadastrado",
            "schema": {
              "type": "object",
              "required": [ "name", "register","cellphone", "mail", "profession", "adress"],
              "properties": {
                "register": {
                  "name": {
                    "type": "string"
                  },
                  "type": "string",
                  "maximum": "100",
                  "unique": "true"
                },
                "phone": {
                  "type": "string",
                  "maximum": "14"
                },
                "cellphone": {
                  "type": "string",
                  "maximum": "14"
                },
                "mail": {
                  "type": "string",
                  "unique":"true"
                },
                "profession": {
                  "type": "string"
                },
                "address": {
                   "type":"string" 
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cadastro realizado com sucesso!"
          },          
          "400": {
            "description": "Erro ao efetuar o cadastro"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/Specialist/": {
      "get": {
        "tags": [
          "Specialist"
        ],
        "summary": "Lista de especialistas",
        "description": "Lista todos os especialistas que foram cadastrados no sistema anteriormente",
        "operationId": "listSpecialist",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "specialist",
            "description": "Dados do especialista a ser cadastrado",
            "schema": {
              "type": "object",
              "required": ["name", "cpf", "phone", "cellphone", "mail"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "register": {
                  "type": "string"
                },
                "phone": {
                  "type": "string",
                  "maximum": "14"
                },
                "cellphone": {
                  "type": "string",
                  "maximum": "14"
                },
                "mail": {
                  "type": "string"
                },
                "profession": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Requisição Inválida!"
          }
        }
      }
    },
    "/Specialist/{id}": {
      "put": {
        "name": "specialist",
        "tags": [
          "Specialist"
        ],
        "summary": "Atualiza os dados do especialista",
        "description": "Atualiza os dados de um especialista específico selecionado pelo ID",
        "operationId": "updateSpecialist",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do especialista a ser alterado",
            "required": true
          },
          {
            "in": "body",
            "name": "specialist",
            "description": "Dados do especialista a ser alterado",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "login": {
                  "type": "string",
                  "minimum": "6",
                  "maximum": "20"
                },
                "password": {
                  "type": "string",
                  "minimum": "6"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID Invalido!"
          },
          "404": {
            "description": "Especialista não encontrado"
          },
          "405": {
            "description": "Erro no servidor"
          }
        }
      },
      "get": {
        "name": "specialist",
        "tags": [
          "Specialist"
        ],
        "summary": "Retorna os dados de um especialista cadastrado",
        "description": "Retorna os dados de um especialista específico selecionado pelo ID",
        "operationId": "showSpecialist",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do especialista a ser exibido",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "name": "specialist",
        "tags": [
          "Specialist"
        ],
        "summary": "Deleta do sistema um especialista",
        "description": "Deleta um cliente do sistema que foi selecionado pelo ID",
        "operationId": "deleteSpecialist",
        "parameters": [
          {
            "in": "path",
            "description": "Id do especialista a ser deletado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/Profession": {
      "post": {
        "tags": [
          "Profession"
        ],
        "summary": "Adiciona uma nova profissão",
        "description": "Cadastre uma nova proifssão para que possa ser possível relacionar ao especialista",
        "operationId": "addProfession",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "profession",
            "description": "Dados da profissão a ser cadastrada",
            "schema": {
              "type": "object",
              "required": ["name", "specialist"],
              "properties": {
                "name": {
                  "type": "string",
                  "unique": "true"
                },
                "specialist":{
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cadastro realizado com sucesso!"
          },          
          "400": {
            "description": "Erro ao efetuar o cadastro"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/Profession/": {
      "get": {
        "tags": [
          "Profession"
        ],
        "summary": "Lista de profissões",
        "description": "Lista todas as profissiões cadastradas anteriormente",
        "operationId": "listProfession",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "profession",
            "description": "Dados das profissão a serem exibidas",
            "schema": {
              "type": "object",
              "required": ["name", "specialist"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "specialist":{
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/Profession/{id}": {
      "put": {
        "name": "profession",
        "tags": [
          "Profession"
        ],
        "summary": "Atualiza os dados da profissão",
        "description": "Atualiza os dados da profissão escolhida pelo ID",
        "operationId": "updateProfession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id da profissão a ser alterado",
            "required": true
          },
          {
            "in": "body",
            "name": "profession",
            "description": "Dados da profissão a ser alterada",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID Invalido!"
          },
          "404": {
            "description": "Profissão não encontrada"
          },
          "405": {
            "description": "Erro no servidor"
          }
        }
      },
      "delete": {
        "name": "profession",
        "tags": [
          "Profession"
        ],
        "summary": "Deleta do sistema uma profissão",
        "description": "Deleta uma profissão especifica do sistema",
        "operationId": "deleteProfession",
        "parameters": [
          {
            "in": "path",
            "description": "Id da profissão a ser deletada",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/Attendance": {
      "post": {
        "tags": [
          "Attendance"
        ],
        "summary": "Adiciona um novo atendimento",
        "description": "Cadastre um novo atendimento",
        "operationId": "addAttendance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "attendance",
            "description": "Dados do atendimento a ser cadastrado",
            "schema": {
              "type": "object",
              "required": ["name", "login", "password"],
              "properties": {
                "date_scheduling": {
                  "type": "date"
                },
                "date_attendance": {
                  "type": "date"
                },
                "date_hour": {
                  "type": "time"
                },
                "value":{
                  "type": "string"
                },
                "status":{
                  "type": "string",
                  "enum":["AGENDADO", "REALIZADO", "CANCELADO"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      },
      "get": {
        "tags": [
          "Attendance"
        ],
        "summary": "Lista todos os atendimentos cadastrados",
        "operationId": "listAttendance",
        "description": "Faz uma lista que contém todos os atendimentos que já foram cadastrados no sistema",
        "consumes":[
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "in": "body",
              "name": "attendance",
              "description": "Dados do atendimento a ser cadastrado",
              "schema": {
                "type": "object",
                "required": ["name", "login", "password"],
                "properties": {
                  "date_scheduling": {
                    "type": "date"
                  },
                  "date_attendance": {
                    "type": "date"
                  },
                  "date_hour": {
                    "type": "time"
                  },
                  "value":{
                    "type": "string"
                  },
                  "status":{
                    "type": "string",
                    "enum":["AGENDADO", "REALIZADO", "CANCELADO"]
                  }
                }
              }
            }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/Attendance/{id}": {
      "put": {
        "name": "attendance",
        "tags": [
          "Attendance"
        ],
        "summary": "Atualiza os dados do atendimento",
        "description": "Atualiza os dados de um atendimento específico selecionado pelo ID",
        "operationId": "updateAttendance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do atendimento a ser alterado",
            "required": true
          },
          {
            "in": "body",
            "name": "attendance",
            "description": "Dados do atendimento a ser alterado",
            "schema": {
              "type": "object",
              "properties": {
                "date_scheduling": {
                  "type": "date"
                },
                "date_attendance": {
                  "type": "date"
                },
                "date_hour": {
                  "type": "time"
                },
                "value":{
                  "type": "string"
                },
                "status":{
                  "type": "string",
                  "enum":["AGENDADO", "REALIZADO", "CANCELADO"]
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID Invalido!"
          },
          "404": {
            "description": "Atendimento não encontrado"
          },
          "405": {
            "description": "Erro no servidor"
          }
        }
      },
      "get": {
        "name": "attendance",
        "tags": [
          "Attendance"
        ],
        "summary": "Retorna os dados de um atendimento cadastrado",
        "description": "Retorna os dados de um atendimento específico selecionado pelo ID",
        "operationId": "showAttendance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do atendimento a ser exibido",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "name": "attendance",
        "tags": [
          "Attendance"
        ],
        "summary": "Delete do sistema um atendimento",
        "description": "Deleta um atendimento do sistema que foi selecionado pelo ID",
        "operationId": "deleteAttendance",
        "parameters": [
          {
            "in": "path",
            "description": "Id do atendimento a ser deletado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/Medical Record": {
      "post": {
        "tags": [
          "Medical Record"
        ],
        "summary": "Adiciona um novo prontuário",
        "description": "Cadastre um novo prontuário para lhe liberar permissões de cadastros, consultas e alterações",
        "operationId": "addMedicalRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "medicalRecord",
            "description": "Dados do prontuário a ser cadastrado",
            "schema": {
              "type": "object",
              "required": ["openingDate"],
              "properties": {
                "openingDate": {
                  "type": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      },
      "get": {
        "tags": [
          "Medical Record"
        ],
        "summary": "Lista todos os prontuários cadastrados",
        "operationId": "listMedicalRecord",
        "description": "Faz uma lista que contém todos os prontuário que já foram cadastrados no sistema",
        "consumes":[
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "medicalRecord",
            "description": "Dados dos prontuários a serem exebidos",
            "schema": {
              "type": "object",
              "required": ["openingDate"],
              "properties": {
                "openingDate": {
                  "type": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/MedicalRecord/{id}": {
      "put": {
        "name": "medicalRecord",
        "tags": [
          "Medical Record"
        ],
        "summary": "Atualiza os dados do prontuário",
        "description": "Atualiza os dados de um prontuário específico selecionado pelo ID",
        "operationId": "updateMedicalRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do prontuário a ser alterado",
            "required": true
          },
          {
            "in": "body",
            "name": "medicalRecord",
            "description": "Dados do prontuário a ser alterado",
            "schema": {
              "type": "object",
              "properties": {
                "openingDate": {
                  "type": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID Invalido!"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "405": {
            "description": "Erro no servidor"
          }
        }
      },
      "get": {
        "name": "medicalRecord",
        "tags": [
          "Medical Record"
        ],
        "summary": "Retorna os dados de um prontuário cadastrado",
        "description": "Retorna os dados de um prontuário específico selecionado pelo ID",
        "operationId": "showMedicalRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Id do prontuário a ser exibido",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "name": "medicalRecord",
        "tags": [
          "Medical Record"
        ],
        "summary": "Delete do sistema um prontuário",
        "description": "Deleta um prontuário do sistema que foi selecionado pelo ID",
        "operationId": "deleteMedicalRecord",
        "parameters": [
          {
            "in": "path",
            "description": "Id do prontuário a ser deletado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "ID inválido"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/Address": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "Adiciona um novo endereço",
        "description": "Cadastro de endereço para associar com cliente.",
        "operationId": "addAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Address",
            "description": "Dados da profissão a ser cadastrada",
            "schema": {
              "type": "object",
              "required": ["name", "specialist"],
              "properties": {
                "name": {
                  "type": "string",
                  "unique": "true"
                },
                "specialist":{
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cadastro realizado com sucesso!"
          },          
          "400": {
            "description": "Erro ao efetuar o cadastro"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    
    "/MedicalRecordHistory": {
      "get": {
        "tags": [
          "Medical Record History"
        ],
        "summary": "Lista o histórico de prontuário já concluídos",
        "operationId": "listMedicalRecordHistory",
        "description": "Faz uma lista que contém todos os prontuários que já foram concluídos anteriormente",
        "consumes":[
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "medicalRecordHistory",
            "description": "Dados do histórico de prontuário a ser exebidos",
            "schema": {
              "type": "object",
              "required": ["date", "hour", "description"],
              "properties": {
                "date": {
                  "type": "date"
                },
                "hour": {
                  "type": "time"
                },
                "description": {
                  "type": "string",
                  "maximum" : "255"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisição realizada com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http:/userstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Usuário": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Cliente": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Especialista": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Profissão": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Atendimento": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      
      "xml": {
        "name": "Pet"
      }
    },
    "Prontuário": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Endereço": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Histórico de Prontuário": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}